name: "Staticcheck"
description: "Run Staticcheck on your Go code"
author: "Dominik Honnef"
branding:
  icon: "alert-triangle"
  color: "blue"
inputs:
  version:
    description: |
      The version of Staticcheck to use. Because new versions of
      Staticcheck introduce new checks that may break your build, it
      is recommended to pin to a specific version and to update
      Staticheck consciously.
    required: true
    default: "latest"
  min-go-version:
    description: |
      Minimum version of Go to support. This affects the diagnostics
      reported by Staticcheck, avoiding suggestions that are not
      applicable to older versions of Go.

      If unset, this will default to the Go version specified in your
      go.mod.
      
      See https://staticcheck.io/docs/running-staticcheck/cli/#go
      for more information.
    required: false
  build-tags:
    description: "Build tags"
    required: false
  install-go:
    description: |
      Let the action install a version of Go appropriate for building and running Staticcheck.
      If set to false, the action expects you to have installed Go already.
      The latest release of Staticcheck works with the last two minor releases of Go.
      The action itself requires at least Go 1.16.
    required: true
    default: true
  cache-key:
    description: |
      String to include in the cache key, in addition to the default, which is runner.os.
      This is useful when using multiple Go versions.
    required: false
  use-sarif:
    default: false
    required: false
runs:
  using: "composite"
  steps:
    - id: install_go
      if: ${{ inputs.install-go != 'false' }}
      uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: "1.17.x"
    - uses: actions/cache@v2
      with:
        path: |
          ${{ runner.temp }}/staticcheck
          ${{ inputs.install-go != 'false' && steps.install_go.outputs.GOCACHE || '' }}
        # use a unique cache key for storing, then restore from the newest cache entry we can.
        key: staticcheck-${{ runner.os }}-${{ inputs.cache-key }}-${{ github.sha }}
        restore-keys: |
          staticcheck-${{ runner.os }}-${{ inputs.cache-key }}-
    - env:
        version: ${{ inputs.version }}
        buildTags: ${{ inputs.build-tags }}
        minGoVersion: ${{ inputs.min-go-version }}
        useSarif: ${{ inputs.use-sarif }}
      run: |
        export STATICCHECK_CACHE="${{ runner.temp }}/staticcheck"
        go install "honnef.co/go/tools/cmd/staticcheck@${version}"
        echo "::add-matcher::$GITHUB_ACTION_PATH/matchers.json"
        args=()
        args+=('-tags' "${buildTags}")
        if [ -n "${minGoVersion}" ]; then
          args+=('-go' "${minGoVersion}")
        fi
        if [ "${useSarif}" != "false" ]; then
          args+=('-f' 'sarif')
          $(go env GOPATH)/bin/staticcheck "${args[@]}" ./... >results.sarif || true
        else
          $(go env GOPATH)/bin/staticcheck "${args[@]}" ./...
        fi
      shell: bash
    - name: Upload SARIF file
      if: ${{ inputs.use-sarif != 'false' }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
